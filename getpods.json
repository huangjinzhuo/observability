{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/scrape": "true",
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:22Z",
                "generateName": "grafana-584949b9c6-",
                "labels": {
                    "app": "grafana",
                    "chart": "grafana",
                    "heritage": "Tiller",
                    "pod-template-hash": "584949b9c6",
                    "release": "istio"
                },
                "name": "grafana-584949b9c6-jh9lm",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "grafana-584949b9c6",
                        "uid": "818b2a1e-91ba-4732-9f09-39f33b88c568"
                    }
                ],
                "resourceVersion": "5675",
                "selfLink": "/api/v1/namespaces/istio-system/pods/grafana-584949b9c6-jh9lm",
                "uid": "e5feacef-60f7-4315-8b91-bcb749836267"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "GRAFANA_PORT",
                                "value": "3000"
                            },
                            {
                                "name": "GF_AUTH_BASIC_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "GF_AUTH_ANONYMOUS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "GF_AUTH_ANONYMOUS_ORG_ROLE",
                                "value": "Admin"
                            },
                            {
                                "name": "GF_PATHS_DATA",
                                "value": "/data/grafana"
                            }
                        ],
                        "image": "grafana/grafana:6.4.3",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "grafana",
                        "ports": [
                            {
                                "containerPort": 3000,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/api/health",
                                "port": 3000,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/data/grafana",
                                "name": "data"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/citadel-dashboard.json",
                                "name": "dashboards-istio-citadel-dashboard",
                                "readOnly": true,
                                "subPath": "citadel-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/galley-dashboard.json",
                                "name": "dashboards-istio-galley-dashboard",
                                "readOnly": true,
                                "subPath": "galley-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/istio-mesh-dashboard.json",
                                "name": "dashboards-istio-istio-mesh-dashboard",
                                "readOnly": true,
                                "subPath": "istio-mesh-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/istio-performance-dashboard.json",
                                "name": "dashboards-istio-istio-performance-dashboard",
                                "readOnly": true,
                                "subPath": "istio-performance-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/istio-service-dashboard.json",
                                "name": "dashboards-istio-istio-service-dashboard",
                                "readOnly": true,
                                "subPath": "istio-service-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/istio-workload-dashboard.json",
                                "name": "dashboards-istio-istio-workload-dashboard",
                                "readOnly": true,
                                "subPath": "istio-workload-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/mixer-dashboard.json",
                                "name": "dashboards-istio-mixer-dashboard",
                                "readOnly": true,
                                "subPath": "mixer-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/pilot-dashboard.json",
                                "name": "dashboards-istio-pilot-dashboard",
                                "readOnly": true,
                                "subPath": "pilot-dashboard.json"
                            },
                            {
                                "mountPath": "/etc/grafana/provisioning/datasources/datasources.yaml",
                                "name": "config",
                                "subPath": "datasources.yaml"
                            },
                            {
                                "mountPath": "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml",
                                "name": "config",
                                "subPath": "dashboardproviders.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-mb6m9",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-40l5",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 472,
                    "runAsUser": 472
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana"
                        },
                        "name": "config"
                    },
                    {
                        "emptyDir": {},
                        "name": "data"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-citadel-dashboard"
                        },
                        "name": "dashboards-istio-citadel-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-galley-dashboard"
                        },
                        "name": "dashboards-istio-galley-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-istio-mesh-dashboard"
                        },
                        "name": "dashboards-istio-istio-mesh-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-istio-performance-dashboard"
                        },
                        "name": "dashboards-istio-istio-performance-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-istio-service-dashboard"
                        },
                        "name": "dashboards-istio-istio-service-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-istio-workload-dashboard"
                        },
                        "name": "dashboards-istio-istio-workload-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-mixer-dashboard"
                        },
                        "name": "dashboards-istio-mixer-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-pilot-dashboard"
                        },
                        "name": "dashboards-istio-pilot-dashboard"
                    },
                    {
                        "name": "default-token-mb6m9",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-mb6m9"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:22Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:38Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:38Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://b3ba6a370522bf7497f07297d146a8a76be51f7d3d1909586b533a9fa60b8154",
                        "image": "grafana/grafana:6.4.3",
                        "imageID": "docker-pullable://grafana/grafana@sha256:bd55ea2bad17f5016431734b42fdfc202ebdc7d08b6c4ad35ebb03d06efdff69",
                        "lastState": {},
                        "name": "grafana",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:32Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.3",
                "phase": "Running",
                "podIP": "10.60.1.6",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:22Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:28Z",
                "generateName": "istio-citadel-557f46d767-",
                "labels": {
                    "app": "security",
                    "chart": "security",
                    "heritage": "Tiller",
                    "istio": "citadel",
                    "pod-template-hash": "557f46d767",
                    "release": "istio"
                },
                "name": "istio-citadel-557f46d767-pb99m",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-citadel-557f46d767",
                        "uid": "fdb6d377-a881-4388-b5f6-69c0d2935311"
                    }
                ],
                "resourceVersion": "5692",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-citadel-557f46d767-pb99m",
                "uid": "6af483df-84ca-435c-8c14-874ebd5218f6"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--append-dns-names=true",
                            "--grpc-port=8060",
                            "--citadel-storage-namespace=istio-system",
                            "--custom-dns-names=istio-pilot-service-account.istio-system:istio-pilot.istio-system",
                            "--monitoring-port=15014",
                            "--self-signed-ca=true",
                            "--workload-cert-ttl=2160h"
                        ],
                        "env": [
                            {
                                "name": "CITADEL_ENABLE_NAMESPACES_BY_DEFAULT",
                                "value": "true"
                            }
                        ],
                        "image": "docker.io/istio/citadel:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "citadel",
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-citadel-service-account-token-zd4dr",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-40l5",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-citadel-service-account",
                "serviceAccountName": "istio-citadel-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "istio-citadel-service-account-token-zd4dr",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-citadel-service-account-token-zd4dr"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:28Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:41Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:41Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:28Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://2269e04ff37b846de2b682faf1f76c8d4db7b3198a4e545f72bd462a9e5991cc",
                        "image": "istio/citadel:1.5.0",
                        "imageID": "docker-pullable://istio/citadel@sha256:7d3e08af09fbf21b2dfe8bf54cc3ba240dde3053a9cfccb33401492a5be73b40",
                        "lastState": {},
                        "name": "citadel",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:40Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.3",
                "phase": "Running",
                "podIP": "10.60.1.10",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:28Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:21Z",
                "generateName": "istio-egressgateway-67f444d69-",
                "labels": {
                    "app": "istio-egressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "istio": "egressgateway",
                    "pod-template-hash": "67f444d69",
                    "release": "istio"
                },
                "name": "istio-egressgateway-67f444d69-k7sfl",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-egressgateway-67f444d69",
                        "uid": "91da4846-9eeb-4919-a0de-cdd1d48a491d"
                    }
                ],
                "resourceVersion": "6164",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-egressgateway-67f444d69-k7sfl",
                "uid": "ae0f2dd8-a3d3-4650-9789-411e7831f6fc"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "proxy",
                            "router",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--log_output_level=default:info",
                            "--drainDuration",
                            "45s",
                            "--parentShutdownDuration",
                            "1m0s",
                            "--connectTimeout",
                            "10s",
                            "--serviceCluster",
                            "istio-egressgateway",
                            "--zipkinAddress",
                            "zipkin:9411",
                            "--proxyAdminPort",
                            "15000",
                            "--statusPort",
                            "15020",
                            "--controlPlaneAuthPolicy",
                            "NONE",
                            "--discoveryAddress",
                            "istio-pilot:15010"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_AUTO_MTLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "ISTIO_META_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_META_CONFIG_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_METAJSON_LABELS",
                                "value": "{\"app\":\"istio-egressgateway\",\"chart\":\"gateways\",\"heritage\":\"Tiller\",\"istio\":\"egressgateway\",\"release\":\"istio\"}\n"
                            },
                            {
                                "name": "ISTIO_META_CLUSTER_ID",
                                "value": "Kubernetes"
                            },
                            {
                                "name": "SDS_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "ISTIO_META_WORKLOAD_NAME",
                                "value": "istio-egressgateway"
                            },
                            {
                                "name": "ISTIO_META_OWNER",
                                "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-egressgateway"
                            },
                            {
                                "name": "ISTIO_META_ROUTER_MODE",
                                "value": "standard"
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 80,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15090,
                                "name": "http-envoy-prom",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 30,
                            "httpGet": {
                                "path": "/healthz/ready",
                                "port": 15020,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 2,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "40Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/egressgateway-certs",
                                "name": "egressgateway-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/egressgateway-ca-certs",
                                "name": "egressgateway-ca-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-egressgateway-service-account-token-jq4hp",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-h6zp",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-egressgateway-service-account",
                "serviceAccountName": "istio-egressgateway-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio.istio-egressgateway-service-account"
                        }
                    },
                    {
                        "name": "egressgateway-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-egressgateway-certs"
                        }
                    },
                    {
                        "name": "egressgateway-ca-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-egressgateway-ca-certs"
                        }
                    },
                    {
                        "name": "istio-egressgateway-service-account-token-jq4hp",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-egressgateway-service-account-token-jq4hp"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:22Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:23:50Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:23:50Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://9fe9ab78badf28533456fa1c661e772ac908168cf5b84abc7dcdd2388009ef1a",
                        "image": "istio/proxyv2:1.5.0",
                        "imageID": "docker-pullable://istio/proxyv2@sha256:89b5fe2df96920189a193dd5f7dbd776e00024e4c1fd1b59bb53867278e9645a",
                        "lastState": {},
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:29Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.5",
                "phase": "Running",
                "podIP": "10.60.3.6",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:22Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:21Z",
                "generateName": "istio-galley-5c66984bf6-",
                "labels": {
                    "app": "galley",
                    "chart": "galley",
                    "heritage": "Tiller",
                    "istio": "galley",
                    "pod-template-hash": "5c66984bf6",
                    "release": "istio"
                },
                "name": "istio-galley-5c66984bf6-6q7br",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-galley-5c66984bf6",
                        "uid": "95fbfafc-b5c3-40db-987a-7b4cb3f313c9"
                    }
                ],
                "resourceVersion": "5943",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-galley-5c66984bf6-6q7br",
                "uid": "040b0023-7e08-42e1-857f-082317efcee3"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/usr/local/bin/galley",
                            "server",
                            "--meshConfigFile=/etc/mesh-config/mesh",
                            "--livenessProbeInterval=1s",
                            "--livenessProbePath=/tmp/healthliveness",
                            "--readinessProbePath=/tmp/healthready",
                            "--readinessProbeInterval=1s",
                            "--deployment-namespace=istio-system",
                            "--insecure=true",
                            "--enable-reconcileWebhookConfiguration=true",
                            "--monitoringPort=15014",
                            "--log_output_level=default:info"
                        ],
                        "image": "docker.io/istio/galley:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/local/bin/galley",
                                    "probe",
                                    "--probe-path=/tmp/healthliveness",
                                    "--interval=10s"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "galley",
                        "ports": [
                            {
                                "containerPort": 9443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15014,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9901,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/local/bin/galley",
                                    "probe",
                                    "--probe-path=/tmp/healthready",
                                    "--interval=10s"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/config",
                                "name": "config",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/mesh-config",
                                "name": "mesh-config",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-galley-service-account-token-q5qc5",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-h6zp",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-galley-service-account",
                "serviceAccountName": "istio-galley-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio.istio-galley-service-account"
                        }
                    },
                    {
                        "emptyDir": {
                            "medium": "Memory"
                        },
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio"
                        },
                        "name": "mesh-config"
                    },
                    {
                        "name": "istio-galley-service-account-token-q5qc5",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-galley-service-account-token-q5qc5"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:21Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:23:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:23:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:21Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://e615cfe42637d2a0b15f67d195015a564b3e655cea71aaeee7b160f140f87658",
                        "image": "istio/galley:1.5.0",
                        "imageID": "docker-pullable://istio/galley@sha256:39776849293e7b28e78d0aa8d7756f3d0484bb116f138bb59d88aea70acf4028",
                        "lastState": {},
                        "name": "galley",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:57Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.5",
                "phase": "Running",
                "podIP": "10.60.3.9",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:21Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:16Z",
                "generateName": "istio-grafana-post-install-1.5.0-",
                "labels": {
                    "app": "istio-grafana",
                    "chart": "grafana",
                    "controller-uid": "c6fceb47-fedf-46a7-b423-ffbb1fabe1d6",
                    "heritage": "Tiller",
                    "job-name": "istio-grafana-post-install-1.5.0",
                    "release": "istio"
                },
                "name": "istio-grafana-post-install-1.5.0-nmvz5",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "batch/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Job",
                        "name": "istio-grafana-post-install-1.5.0",
                        "uid": "c6fceb47-fedf-46a7-b423-ffbb1fabe1d6"
                    }
                ],
                "resourceVersion": "5645",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-grafana-post-install-1.5.0-nmvz5",
                "uid": "98563ecc-dde9-4073-93cc-9626f6622a04"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/bin/bash",
                            "/tmp/grafana/run.sh",
                            "/tmp/grafana/custom-resources.yaml"
                        ],
                        "image": "docker.io/istio/kubectl:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kubectl",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/grafana",
                                "name": "tmp-configmap-grafana"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-grafana-post-install-account-token-mhbnm",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-h6zp",
                "priority": 0,
                "restartPolicy": "OnFailure",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-grafana-post-install-account",
                "serviceAccountName": "istio-grafana-post-install-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-custom-resources"
                        },
                        "name": "tmp-configmap-grafana"
                    },
                    {
                        "name": "istio-grafana-post-install-account-token-mhbnm",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-grafana-post-install-account-token-mhbnm"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:16Z",
                        "reason": "PodCompleted",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:34Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:34Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:16Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://bf17a3fc4efedfeb32b0fb965f820d62019dea33be725d727e1ee06a09e6ff82",
                        "image": "istio/kubectl:1.5.0",
                        "imageID": "docker-pullable://istio/kubectl@sha256:dd23e207ec6cdb5141a9457dfec7c3544221c32357e030be57b3bd9053ecdb73",
                        "lastState": {},
                        "name": "kubectl",
                        "ready": false,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://bf17a3fc4efedfeb32b0fb965f820d62019dea33be725d727e1ee06a09e6ff82",
                                "exitCode": 0,
                                "finishedAt": "2020-04-14T23:22:32Z",
                                "reason": "Completed",
                                "startedAt": "2020-04-14T23:22:19Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.5",
                "phase": "Succeeded",
                "podIP": "10.60.3.4",
                "qosClass": "BestEffort",
                "startTime": "2020-04-14T23:22:16Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:22Z",
                "generateName": "istio-ingressgateway-7cc859b7c8-",
                "labels": {
                    "app": "istio-ingressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "istio": "ingressgateway",
                    "pod-template-hash": "7cc859b7c8",
                    "release": "istio"
                },
                "name": "istio-ingressgateway-7cc859b7c8-wdjt8",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-ingressgateway-7cc859b7c8",
                        "uid": "a61ca3e6-a4ff-47a5-8c31-482ecd35f941"
                    }
                ],
                "resourceVersion": "6212",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-ingressgateway-7cc859b7c8-wdjt8",
                "uid": "ec7fd0c4-cc54-4a3c-adc7-63137fd22d68"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "proxy",
                            "router",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--log_output_level=default:info",
                            "--drainDuration",
                            "45s",
                            "--parentShutdownDuration",
                            "1m0s",
                            "--connectTimeout",
                            "10s",
                            "--serviceCluster",
                            "istio-ingressgateway",
                            "--zipkinAddress",
                            "zipkin:9411",
                            "--proxyAdminPort",
                            "15000",
                            "--statusPort",
                            "15020",
                            "--controlPlaneAuthPolicy",
                            "NONE",
                            "--discoveryAddress",
                            "istio-pilot:15010"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "SERVICE_ACCOUNT",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.serviceAccountName"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_AUTO_MTLS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "ISTIO_META_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_META_CONFIG_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_METAJSON_LABELS",
                                "value": "{\"app\":\"istio-ingressgateway\",\"chart\":\"gateways\",\"heritage\":\"Tiller\",\"istio\":\"ingressgateway\",\"release\":\"istio\"}\n"
                            },
                            {
                                "name": "ISTIO_META_CLUSTER_ID",
                                "value": "Kubernetes"
                            },
                            {
                                "name": "SDS_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "ISTIO_META_WORKLOAD_NAME",
                                "value": "istio-ingressgateway"
                            },
                            {
                                "name": "ISTIO_META_OWNER",
                                "value": "kubernetes://apis/apps/v1/namespaces/istio-system/deployments/istio-ingressgateway"
                            },
                            {
                                "name": "ISTIO_META_ROUTER_MODE",
                                "value": "standard"
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 15020,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 80,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 31400,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15029,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15030,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15031,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15032,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15090,
                                "name": "http-envoy-prom",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 30,
                            "httpGet": {
                                "path": "/healthz/ready",
                                "port": 15020,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 2,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "40Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/ingressgateway-certs",
                                "name": "ingressgateway-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/ingressgateway-ca-certs",
                                "name": "ingressgateway-ca-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-ingressgateway-service-account-token-692bm",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-h6zp",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-ingressgateway-service-account",
                "serviceAccountName": "istio-ingressgateway-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio.istio-ingressgateway-service-account"
                        }
                    },
                    {
                        "name": "ingressgateway-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-ingressgateway-certs"
                        }
                    },
                    {
                        "name": "ingressgateway-ca-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-ingressgateway-ca-certs"
                        }
                    },
                    {
                        "name": "istio-ingressgateway-service-account-token-692bm",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-ingressgateway-service-account-token-692bm"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:22Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:23:59Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:23:59Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://02a7110ddfa157dfc86055a7f923e0efa8c673d9e3587f3164dd517493d35986",
                        "image": "istio/proxyv2:1.5.0",
                        "imageID": "docker-pullable://istio/proxyv2@sha256:89b5fe2df96920189a193dd5f7dbd776e00024e4c1fd1b59bb53867278e9645a",
                        "lastState": {},
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:29Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.5",
                "phase": "Running",
                "podIP": "10.60.3.5",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:22Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:10Z",
                "generateName": "istio-init-crd-all-1.5.0-",
                "labels": {
                    "controller-uid": "79cf2b37-64ef-4789-af9e-e983d78dd0a0",
                    "job-name": "istio-init-crd-all-1.5.0"
                },
                "name": "istio-init-crd-all-1.5.0-5zgfp",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "batch/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Job",
                        "name": "istio-init-crd-all-1.5.0",
                        "uid": "79cf2b37-64ef-4789-af9e-e983d78dd0a0"
                    }
                ],
                "resourceVersion": "5654",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-init-crd-all-1.5.0-5zgfp",
                "uid": "176eae53-866a-4a9b-a539-69a89573aff4"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "kubectl",
                            "apply",
                            "-f",
                            "/etc/istio/crd-all/crd-all.gen.yaml"
                        ],
                        "image": "docker.io/istio/kubectl:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-init-crd-all",
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "200Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "50Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/istio/crd-all",
                                "name": "crd-all",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-init-service-account-token-cnjtk",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-h6zp",
                "priority": 0,
                "restartPolicy": "OnFailure",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-init-service-account",
                "serviceAccountName": "istio-init-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-crd-all"
                        },
                        "name": "crd-all"
                    },
                    {
                        "name": "istio-init-service-account-token-cnjtk",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-init-service-account-token-cnjtk"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:10Z",
                        "reason": "PodCompleted",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:35Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:35Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:10Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://990cfedb4ef976957dbd133ac867fcfb7ce4b828c490d2a70ae0f7aa86e3b01a",
                        "image": "istio/kubectl:1.5.0",
                        "imageID": "docker-pullable://istio/kubectl@sha256:dd23e207ec6cdb5141a9457dfec7c3544221c32357e030be57b3bd9053ecdb73",
                        "lastState": {},
                        "name": "istio-init-crd-all",
                        "ready": false,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://990cfedb4ef976957dbd133ac867fcfb7ce4b828c490d2a70ae0f7aa86e3b01a",
                                "exitCode": 0,
                                "finishedAt": "2020-04-14T23:22:32Z",
                                "reason": "Completed",
                                "startedAt": "2020-04-14T23:22:18Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.5",
                "phase": "Succeeded",
                "podIP": "10.60.3.3",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:10Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:10Z",
                "generateName": "istio-init-crd-mixer-1.5.0-",
                "labels": {
                    "controller-uid": "9e522ac4-1936-4235-99f0-d399229a53c7",
                    "job-name": "istio-init-crd-mixer-1.5.0"
                },
                "name": "istio-init-crd-mixer-1.5.0-djgq8",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "batch/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Job",
                        "name": "istio-init-crd-mixer-1.5.0",
                        "uid": "9e522ac4-1936-4235-99f0-d399229a53c7"
                    }
                ],
                "resourceVersion": "5520",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-init-crd-mixer-1.5.0-djgq8",
                "uid": "39fd53d4-0f3a-400a-8e2b-2dd91763b77f"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "kubectl",
                            "apply",
                            "-f",
                            "/etc/istio/crd-mixer/crd-mixer.yaml"
                        ],
                        "image": "docker.io/istio/kubectl:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-init-crd-mixer",
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "200Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "50Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/istio/crd-mixer",
                                "name": "crd-mixer",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-init-service-account-token-cnjtk",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-40l5",
                "priority": 0,
                "restartPolicy": "OnFailure",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-init-service-account",
                "serviceAccountName": "istio-init-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-crd-mixer"
                        },
                        "name": "crd-mixer"
                    },
                    {
                        "name": "istio-init-service-account-token-cnjtk",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-init-service-account-token-cnjtk"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:10Z",
                        "reason": "PodCompleted",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:27Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:27Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:10Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://8180518261c1142a5482002dce0d3af8465f8d95887b79c4cda695d8d5fa51f1",
                        "image": "istio/kubectl:1.5.0",
                        "imageID": "docker-pullable://istio/kubectl@sha256:dd23e207ec6cdb5141a9457dfec7c3544221c32357e030be57b3bd9053ecdb73",
                        "lastState": {},
                        "name": "istio-init-crd-mixer",
                        "ready": false,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://8180518261c1142a5482002dce0d3af8465f8d95887b79c4cda695d8d5fa51f1",
                                "exitCode": 0,
                                "finishedAt": "2020-04-14T23:22:25Z",
                                "reason": "Completed",
                                "startedAt": "2020-04-14T23:22:19Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.3",
                "phase": "Succeeded",
                "podIP": "10.60.1.4",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:10Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:26Z",
                "generateName": "istio-pilot-bb4bc587f-",
                "labels": {
                    "app": "pilot",
                    "chart": "pilot",
                    "heritage": "Tiller",
                    "istio": "pilot",
                    "pod-template-hash": "bb4bc587f",
                    "release": "istio"
                },
                "name": "istio-pilot-bb4bc587f-zg2dw",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-pilot-bb4bc587f",
                        "uid": "7657f1f5-fca2-4de3-94fb-989e9255fc81"
                    }
                ],
                "resourceVersion": "5984",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-pilot-bb4bc587f-zg2dw",
                "uid": "52de3052-88d2-4fc0-b9a5-c8aef7826183"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "discovery",
                            "--monitoringAddr=:15014",
                            "--log_output_level=default:info",
                            "--domain",
                            "cluster.local",
                            "--secureGrpcAddr",
                            "",
                            "--keepaliveMaxServerConnectionAge",
                            "30m"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "PILOT_PUSH_THROTTLE",
                                "value": "100"
                            },
                            {
                                "name": "PILOT_TRACE_SAMPLING",
                                "value": "100"
                            },
                            {
                                "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND",
                                "value": "true"
                            },
                            {
                                "name": "PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND",
                                "value": "false"
                            }
                        ],
                        "image": "docker.io/istio/pilot:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "discovery",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15010,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m",
                                "memory": "100Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/istio/config",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-pilot-service-account-token-qmn5m",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "proxy",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--serviceCluster",
                            "istio-pilot",
                            "--templateFile",
                            "/etc/istio/proxy/envoy_pilot.yaml.tmpl",
                            "--controlPlaneAuthPolicy",
                            "NONE",
                            "--log_output_level=default:info"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "SDS_ENABLED",
                                "value": "false"
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 15003,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15005,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15007,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15011,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "40Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-pilot-service-account-token-qmn5m",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-40l5",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-pilot-service-account",
                "serviceAccountName": "istio-pilot-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio.istio-pilot-service-account"
                        }
                    },
                    {
                        "name": "istio-pilot-service-account-token-qmn5m",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-pilot-service-account-token-qmn5m"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:27Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:23:14Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:23:14Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://bda2659cc886b8ba1fe1efcc2abcb3932bc7193f776dd58af8ef707b32758054",
                        "image": "istio/pilot:1.5.0",
                        "imageID": "docker-pullable://istio/pilot@sha256:e3e03b31cebfc4c73d4788b83af3339685673970a5c3bf3167db399d39696ed8",
                        "lastState": {},
                        "name": "discovery",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:39Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://8cd81312949a4f5ab5797400dee6b283dd54d1a1127854edd61bf9c8d61879fa",
                        "image": "istio/proxyv2:1.5.0",
                        "imageID": "docker-pullable://istio/proxyv2@sha256:89b5fe2df96920189a193dd5f7dbd776e00024e4c1fd1b59bb53867278e9645a",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://4c3cafcc12726a72e4d495c318eae4ca693dcf828eefbf7558000813ade32f18",
                                "exitCode": 0,
                                "finishedAt": "2020-04-14T23:22:53Z",
                                "reason": "Completed",
                                "startedAt": "2020-04-14T23:22:53Z"
                            }
                        },
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 2,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:23:07Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.3",
                "phase": "Running",
                "podIP": "10.60.1.9",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:27Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:24Z",
                "generateName": "istio-policy-7b8b6865f5-",
                "labels": {
                    "app": "policy",
                    "chart": "mixer",
                    "heritage": "Tiller",
                    "istio": "mixer",
                    "istio-mixer-type": "policy",
                    "pod-template-hash": "7b8b6865f5",
                    "release": "istio"
                },
                "name": "istio-policy-7b8b6865f5-zcb82",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-policy-7b8b6865f5",
                        "uid": "5f409c71-da08-4776-a0c8-7cc3e5158a84"
                    }
                ],
                "resourceVersion": "5939",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-policy-7b8b6865f5-zcb82",
                "uid": "9a492189-7979-41ed-ab86-062adcefc045"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--monitoringPort=15014",
                            "--address",
                            "unix:///sock/mixer.socket",
                            "--log_output_level=default:info",
                            "--configStoreURL=mcp://istio-galley.istio-system.svc:9901",
                            "--configDefaultNamespace=istio-system",
                            "--useAdapterCRDs=false",
                            "--useTemplateCRDs=false",
                            "--trace_zipkin_url=http://zipkin.istio-system:9411/api/v1/spans"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "GOMAXPROCS",
                                "value": "6"
                            }
                        ],
                        "image": "docker.io/istio/mixer:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/version",
                                "port": 15014,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "mixer",
                        "ports": [
                            {
                                "containerPort": 15014,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 42422,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m",
                                "memory": "100Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/sock",
                                "name": "uds-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-mixer-service-account-token-2rdkb",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "proxy",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--serviceCluster",
                            "istio-policy",
                            "--templateFile",
                            "/etc/istio/proxy/envoy_policy.yaml.tmpl",
                            "--controlPlaneAuthPolicy",
                            "NONE",
                            "--log_output_level=default:info"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "SDS_ENABLED",
                                "value": "false"
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 9091,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15004,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15090,
                                "name": "http-envoy-prom",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "40Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/sock",
                                "name": "uds-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/istio.io/policy/adapter",
                                "name": "policy-adapter-secret",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-mixer-service-account-token-2rdkb",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-40l5",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-mixer-service-account",
                "serviceAccountName": "istio-mixer-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio.istio-mixer-service-account"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "uds-socket"
                    },
                    {
                        "name": "policy-adapter-secret",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "policy-adapter-secret"
                        }
                    },
                    {
                        "name": "istio-mixer-service-account-token-2rdkb",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-mixer-service-account-token-2rdkb"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:24Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:52Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:52Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:24Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://2a68e440832a75d2c7275c24fa2398320221a9aaf69f163a98583e239febe4a4",
                        "image": "istio/proxyv2:1.5.0",
                        "imageID": "docker-pullable://istio/proxyv2@sha256:89b5fe2df96920189a193dd5f7dbd776e00024e4c1fd1b59bb53867278e9645a",
                        "lastState": {},
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:51Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://745efecb5b8fead740050a64802404ce31444198e3452c090b16797ebc9df19e",
                        "image": "istio/mixer:1.5.0",
                        "imageID": "docker-pullable://istio/mixer@sha256:19a4e59784b79bea2b29818865d59020db390efa728b98a0424db2798976d65c",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://0b797e9f71c072662fa46c1d4ec0133dd42757f9abde16d0a7a158b187527904",
                                "exitCode": 2,
                                "finishedAt": "2020-04-14T23:23:04Z",
                                "reason": "Error",
                                "startedAt": "2020-04-14T23:22:36Z"
                            }
                        },
                        "name": "mixer",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:23:05Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.3",
                "phase": "Running",
                "podIP": "10.60.1.7",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:24Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:17Z",
                "generateName": "istio-security-post-install-1.5.0-",
                "labels": {
                    "app": "security",
                    "chart": "security",
                    "controller-uid": "68ba2914-3c27-4c7c-8fe5-3f4505a95a47",
                    "heritage": "Tiller",
                    "job-name": "istio-security-post-install-1.5.0",
                    "release": "istio"
                },
                "name": "istio-security-post-install-1.5.0-c8zdv",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "batch/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Job",
                        "name": "istio-security-post-install-1.5.0",
                        "uid": "68ba2914-3c27-4c7c-8fe5-3f4505a95a47"
                    }
                ],
                "resourceVersion": "5636",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-security-post-install-1.5.0-c8zdv",
                "uid": "545a5a26-4cb3-4306-84ed-c1c08cd5db9f"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/bin/bash",
                            "/tmp/security/run.sh",
                            "/tmp/security/custom-resources.yaml"
                        ],
                        "image": "docker.io/istio/kubectl:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kubectl",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/tmp/security",
                                "name": "tmp-configmap-security"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-security-post-install-account-token-qb8d5",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-40l5",
                "priority": 0,
                "restartPolicy": "OnFailure",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-security-post-install-account",
                "serviceAccountName": "istio-security-post-install-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-security-custom-resources"
                        },
                        "name": "tmp-configmap-security"
                    },
                    {
                        "name": "istio-security-post-install-account-token-qb8d5",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-security-post-install-account-token-qb8d5"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:17Z",
                        "reason": "PodCompleted",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:33Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:33Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:17Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://7eab6320292c476e8dc34ec519e49ed461479d7d4bd67fb0cfefbd845046d81c",
                        "image": "istio/kubectl:1.5.0",
                        "imageID": "docker-pullable://istio/kubectl@sha256:dd23e207ec6cdb5141a9457dfec7c3544221c32357e030be57b3bd9053ecdb73",
                        "lastState": {},
                        "name": "kubectl",
                        "ready": false,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://7eab6320292c476e8dc34ec519e49ed461479d7d4bd67fb0cfefbd845046d81c",
                                "exitCode": 0,
                                "finishedAt": "2020-04-14T23:22:32Z",
                                "reason": "Completed",
                                "startedAt": "2020-04-14T23:22:19Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.3",
                "phase": "Succeeded",
                "podIP": "10.60.1.5",
                "qosClass": "BestEffort",
                "startTime": "2020-04-14T23:22:17Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:28Z",
                "generateName": "istio-sidecar-injector-84cf77ffd8-",
                "labels": {
                    "app": "sidecarInjectorWebhook",
                    "chart": "sidecarInjectorWebhook",
                    "heritage": "Tiller",
                    "istio": "sidecar-injector",
                    "pod-template-hash": "84cf77ffd8",
                    "release": "istio"
                },
                "name": "istio-sidecar-injector-84cf77ffd8-8j9pk",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-sidecar-injector-84cf77ffd8",
                        "uid": "b5b47e87-68dc-440d-bc27-8e68adb105c4"
                    }
                ],
                "resourceVersion": "6143",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-sidecar-injector-84cf77ffd8-8j9pk",
                "uid": "5dd16ff3-95eb-46f0-994f-659583e83c00"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--caCertFile=/etc/istio/certs/root-cert.pem",
                            "--tlsCertFile=/etc/istio/certs/cert-chain.pem",
                            "--tlsKeyFile=/etc/istio/certs/key.pem",
                            "--injectConfig=/etc/istio/inject/config",
                            "--meshConfig=/etc/istio/config/mesh",
                            "--healthCheckInterval=2s",
                            "--healthCheckFile=/tmp/health",
                            "--reconcileWebhookConfig=true"
                        ],
                        "image": "docker.io/istio/sidecar_injector:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/local/bin/sidecar-injector",
                                    "probe",
                                    "--probe-path=/tmp/health",
                                    "--interval=4s"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 4,
                            "periodSeconds": 4,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sidecar-injector-webhook",
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/local/bin/sidecar-injector",
                                    "probe",
                                    "--probe-path=/tmp/health",
                                    "--interval=4s"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 4,
                            "periodSeconds": 4,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/istio/config",
                                "name": "config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/certs",
                                "name": "certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/inject",
                                "name": "inject-config",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-sidecar-injector-service-account-token-rr4df",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-nd08",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-sidecar-injector-service-account",
                "serviceAccountName": "istio-sidecar-injector-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio.istio-sidecar-injector-service-account"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "config",
                                    "path": "config"
                                },
                                {
                                    "key": "values",
                                    "path": "values"
                                }
                            ],
                            "name": "istio-sidecar-injector"
                        },
                        "name": "inject-config"
                    },
                    {
                        "name": "istio-sidecar-injector-service-account-token-rr4df",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-sidecar-injector-service-account-token-rr4df"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:29Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:23:47Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:23:47Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:29Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://ba834a06db92bd3f7fd8b8ee94ee2b70f812497076e830f86eef5f954357d281",
                        "image": "istio/sidecar_injector:1.5.0",
                        "imageID": "docker-pullable://istio/sidecar_injector@sha256:870e5c056d23218808f67968f659461422043b7c1499542b5f8cf8beb005a7fe",
                        "lastState": {},
                        "name": "sidecar-injector-webhook",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:23:42Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.2",
                "phase": "Running",
                "podIP": "10.60.2.3",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:29Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:25Z",
                "generateName": "istio-telemetry-864b57bd78-",
                "labels": {
                    "app": "telemetry",
                    "chart": "mixer",
                    "heritage": "Tiller",
                    "istio": "mixer",
                    "istio-mixer-type": "telemetry",
                    "pod-template-hash": "864b57bd78",
                    "release": "istio"
                },
                "name": "istio-telemetry-864b57bd78-chv2s",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-telemetry-864b57bd78",
                        "uid": "b9ff558c-73a4-4b46-8394-d3e6342b3ad0"
                    }
                ],
                "resourceVersion": "5940",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-telemetry-864b57bd78-chv2s",
                "uid": "63a56137-fad2-4b19-976c-989e3293e1da"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--monitoringPort=15014",
                            "--address",
                            "unix:///sock/mixer.socket",
                            "--log_output_level=default:info",
                            "--configStoreURL=mcp://istio-galley.istio-system.svc:9901",
                            "--configDefaultNamespace=istio-system",
                            "--useAdapterCRDs=false",
                            "--useTemplateCRDs=false",
                            "--trace_zipkin_url=http://zipkin.istio-system:9411/api/v1/spans",
                            "--averageLatencyThreshold",
                            "100ms",
                            "--loadsheddingMode",
                            "enforce"
                        ],
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "GOMAXPROCS",
                                "value": "6"
                            }
                        ],
                        "image": "docker.io/istio/mixer:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/version",
                                "port": 15014,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "mixer",
                        "ports": [
                            {
                                "containerPort": 15014,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 42422,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "4800m",
                                "memory": "4G"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "100Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/istio.io/telemetry/adapter",
                                "name": "telemetry-adapter-secret",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/sock",
                                "name": "uds-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-mixer-service-account-token-2rdkb",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "proxy",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--serviceCluster",
                            "istio-telemetry",
                            "--templateFile",
                            "/etc/istio/proxy/envoy_telemetry.yaml.tmpl",
                            "--controlPlaneAuthPolicy",
                            "NONE",
                            "--log_output_level=default:info"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "SDS_ENABLED",
                                "value": "false"
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.5.0",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 9091,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15004,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15090,
                                "name": "http-envoy-prom",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "40Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/sock",
                                "name": "uds-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-mixer-service-account-token-2rdkb",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-40l5",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-mixer-service-account",
                "serviceAccountName": "istio-mixer-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio.istio-mixer-service-account"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "uds-socket"
                    },
                    {
                        "name": "telemetry-adapter-secret",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "telemetry-adapter-secret"
                        }
                    },
                    {
                        "name": "istio-mixer-service-account-token-2rdkb",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-mixer-service-account-token-2rdkb"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:26Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:52Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:52Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:26Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://49b606585e10d4730d74b2bd781d1533d47fbf65a0657beea840686d55b5a872",
                        "image": "istio/proxyv2:1.5.0",
                        "imageID": "docker-pullable://istio/proxyv2@sha256:89b5fe2df96920189a193dd5f7dbd776e00024e4c1fd1b59bb53867278e9645a",
                        "lastState": {},
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:51Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://c28c6e382375c14c60a7958a41f83b550443c8fab0c2eb1166445d0f84259db9",
                        "image": "istio/mixer:1.5.0",
                        "imageID": "docker-pullable://istio/mixer@sha256:19a4e59784b79bea2b29818865d59020db390efa728b98a0424db2798976d65c",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://398258dfcfc4ff179e1da07342933cb6ffd9ae5fbb91e7070f61b2d1d3f9d7c5",
                                "exitCode": 2,
                                "finishedAt": "2020-04-14T23:23:04Z",
                                "reason": "Error",
                                "startedAt": "2020-04-14T23:22:36Z"
                            }
                        },
                        "name": "mixer",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:23:05Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.3",
                "phase": "Running",
                "podIP": "10.60.1.8",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:26Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/port": "14269",
                    "prometheus.io/scrape": "true",
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:29Z",
                "generateName": "istio-tracing-68ffb9d456-",
                "labels": {
                    "app": "jaeger",
                    "chart": "tracing",
                    "heritage": "Tiller",
                    "pod-template-hash": "68ffb9d456",
                    "release": "istio"
                },
                "name": "istio-tracing-68ffb9d456-c28k6",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-tracing-68ffb9d456",
                        "uid": "83ff5fc7-95eb-4e62-8d68-fcec7aff2fb2"
                    }
                ],
                "resourceVersion": "5728",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-tracing-68ffb9d456-c28k6",
                "uid": "672af7c0-84db-4371-81b5-3db337e28292"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "BADGER_EPHEMERAL",
                                "value": "false"
                            },
                            {
                                "name": "SPAN_STORAGE_TYPE",
                                "value": "badger"
                            },
                            {
                                "name": "BADGER_DIRECTORY_VALUE",
                                "value": "/badger/data"
                            },
                            {
                                "name": "BADGER_DIRECTORY_KEY",
                                "value": "/badger/key"
                            },
                            {
                                "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                "value": "9411"
                            },
                            {
                                "name": "MEMORY_MAX_TRACES",
                                "value": "50000"
                            },
                            {
                                "name": "QUERY_BASE_PATH",
                                "value": "/jaeger"
                            }
                        ],
                        "image": "docker.io/jaegertracing/all-in-one:1.16",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 14269,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "jaeger",
                        "ports": [
                            {
                                "containerPort": 9411,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 16686,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 14250,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 14267,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 14268,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 14269,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 5775,
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 6831,
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 6832,
                                "protocol": "UDP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 14269,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/badger",
                                "name": "data"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-mb6m9",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-40l5",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "emptyDir": {},
                        "name": "data"
                    },
                    {
                        "name": "default-token-mb6m9",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-mb6m9"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:30Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:44Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:44Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:29Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://8dcea318006920dd1bb0ddb63275af875825dac871aca33310776e3ee167138b",
                        "image": "jaegertracing/all-in-one:1.16",
                        "imageID": "docker-pullable://jaegertracing/all-in-one@sha256:738442983b772a5d413c8a2c44a5563956adaff224e5b38f52a959124dafc119",
                        "lastState": {},
                        "name": "jaeger",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:43Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.3",
                "phase": "Running",
                "podIP": "10.60.1.11",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:30Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "kiali.io/runtimes": "go,kiali",
                    "prometheus.io/port": "9090",
                    "prometheus.io/scrape": "true",
                    "scheduler.alpha.kubernetes.io/critical-pod": "",
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:23Z",
                "generateName": "kiali-7d4cf866cc-",
                "labels": {
                    "app": "kiali",
                    "chart": "kiali",
                    "heritage": "Tiller",
                    "pod-template-hash": "7d4cf866cc",
                    "release": "istio"
                },
                "name": "kiali-7d4cf866cc-dc8j7",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kiali-7d4cf866cc",
                        "uid": "10483da3-e5c8-43c8-a1ac-f9aff09a59b5"
                    }
                ],
                "resourceVersion": "5835",
                "selfLink": "/api/v1/namespaces/istio-system/pods/kiali-7d4cf866cc-dc8j7",
                "uid": "9067bf70-3f8c-4325-a11b-c83aa98e2177"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/opt/kiali/kiali",
                            "-config",
                            "/kiali-configuration/config.yaml",
                            "-v",
                            "3"
                        ],
                        "env": [
                            {
                                "name": "ACTIVE_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "image": "quay.io/kiali/kiali:v1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/kiali/healthz",
                                "port": 20001,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "kiali",
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/kiali/healthz",
                                "port": 20001,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/kiali-configuration",
                                "name": "kiali-configuration"
                            },
                            {
                                "mountPath": "/kiali-cert",
                                "name": "kiali-cert"
                            },
                            {
                                "mountPath": "/kiali-secret",
                                "name": "kiali-secret"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kiali-service-account-token-ql4sz",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-h6zp",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kiali-service-account",
                "serviceAccountName": "kiali-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "kiali"
                        },
                        "name": "kiali-configuration"
                    },
                    {
                        "name": "kiali-cert",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio.kiali-service-account"
                        }
                    },
                    {
                        "name": "kiali-secret",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "kiali"
                        }
                    },
                    {
                        "name": "kiali-service-account-token-ql4sz",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "kiali-service-account-token-ql4sz"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:23Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:53Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:53Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:23Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://54ddda0b992f1a37520f9852ad5a6e68bfcf72e630521608bbddc94abd1ce433",
                        "image": "quay.io/kiali/kiali:v1.9",
                        "imageID": "docker-pullable://quay.io/kiali/kiali@sha256:ebd6317cf1d42ab8c74f3146fe581dc9ca7a73b8ff25017958bed70dd155c2f3",
                        "lastState": {},
                        "name": "kiali",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:34Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.5",
                "phase": "Running",
                "podIP": "10.60.3.7",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:23Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2020-04-14T23:22:27Z",
                "generateName": "prometheus-8685f659f-",
                "labels": {
                    "app": "prometheus",
                    "chart": "prometheus",
                    "heritage": "Tiller",
                    "pod-template-hash": "8685f659f",
                    "release": "istio"
                },
                "name": "prometheus-8685f659f-nrqc7",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "prometheus-8685f659f",
                        "uid": "cde4847f-afbd-4fdb-b0ba-930e451328f6"
                    }
                ],
                "resourceVersion": "5887",
                "selfLink": "/api/v1/namespaces/istio-system/pods/prometheus-8685f659f-nrqc7",
                "uid": "2855b20d-f34f-47ba-8208-6b96137f3244"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--storage.tsdb.retention=6h",
                            "--config.file=/etc/prometheus/prometheus.yml"
                        ],
                        "image": "docker.io/prom/prometheus:v2.12.0",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/-/healthy",
                                "port": 9090,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "prometheus",
                        "ports": [
                            {
                                "containerPort": 9090,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/-/ready",
                                "port": 9090,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/prometheus",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/istio-certs",
                                "name": "istio-certs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "prometheus-token-hlrzn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "enableServiceLinks": true,
                "nodeName": "gke-dev-cluster-default-pool-88d407c6-h6zp",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "prometheus",
                "serviceAccountName": "prometheus",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "prometheus"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio.default"
                        }
                    },
                    {
                        "name": "prometheus-token-hlrzn",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "prometheus-token-hlrzn"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:27Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:59Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:59Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2020-04-14T23:22:27Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://625f4459c087119843ee58ed94d68a7f1897cc485101633b6cbac56e1d243223",
                        "image": "prom/prometheus:v2.12.0",
                        "imageID": "docker-pullable://prom/prometheus@sha256:cd93b8711bb92eb9c437d74217311519e0a93bc55779aa664325dc83cd13cb32",
                        "lastState": {},
                        "name": "prometheus",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2020-04-14T23:22:49Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.128.0.5",
                "phase": "Running",
                "podIP": "10.60.3.8",
                "qosClass": "Burstable",
                "startTime": "2020-04-14T23:22:27Z"
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": "",
        "selfLink": ""
    }
}
